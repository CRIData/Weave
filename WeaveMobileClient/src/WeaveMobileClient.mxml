<?xml version="1.0" encoding="utf-8"?>
<!--
	Weave (Web-based Analysis and Visualization Environment)
	Copyright (C) 2008-2011 University of Massachusetts Lowell
	
	This file is a part of Weave.
	
	Weave is free software: you can redistribute it and/or modify
	it under the terms of the GNU General Public License, Version 3,
	as published by the Free Software Foundation.
	
	Weave is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	GNU General Public License for more details.
	
	You should have received a copy of the GNU General Public License
	along with Weave.  If not, see <http://www.gnu.org/licenses/>.
-->
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009"
			   xmlns:s="library://ns.adobe.com/flex/spark"
			   interactionMode="touch"
			   resizeForSoftKeyboard="false"
			   applicationComplete="init(event)"
			   backgroundColor="0x000000"
			   >
	<s:Label id="logo" text="Weave" color="0x808080" width="100%" height="100%" textAlign="center" verticalAlign="middle" fontSize="64"/>
	<fx:Script>
		<![CDATA[
			import flash.utils.setTimeout;
			
			import spark.layouts.TileLayout;
			import spark.layouts.TileOrientation;
			import spark.layouts.VerticalLayout;
			import spark.layouts.supportClasses.LayoutBase;
			
			import weave.Weave;
			import weave.api.WeaveAPI;
			import weave.api.ui.ILinkableLayoutManager;
			import weave.core.UIUtils;
			import weave.resources._MobileDemo;
			import weave.ui.BasicLinkableLayoutManager;
			import weave.ui.WeavePodLayoutManager;
			
			// reference classes here so they get included in the app build
			WeaveFonts;
			
//			public var main:MobileDemoInterface;
			public var main:WeavePodLayoutManager;
			public var tileLayout:TileLayout;
			
			private function init(event:Event):void
			{
				if (event.type != Event.ENTER_FRAME)
				{
					addEventListener(Event.ENTER_FRAME, init);
					return;
				}
				else
				{
					removeEventListener(Event.ENTER_FRAME, init);
				}
				
				removeElement(logo)
				logo = null;
				layout = new VerticalLayout();
				
				/* this.addElement(console = new MobileConsole());
				 console.height = 220;*/
//				this.addElement(main = new MobileDemoInterface());
				
				// begin tile layout demo
				/* tileLayout = new TileLayout();
				this.addElement(main = new BasicLinkableLayoutManager());
				tileLayout.orientation = TileOrientation.ROWS;
				tileLayout.columnWidth = 220;
				tileLayout.rowHeight = 220;
				main.layout = tileLayout; */
				// end tile layout demo
	
				this.addElement(main = new WeavePodLayoutManager());
				main.scale.value = 2;
				
				UIUtils.linkLayoutManager(main, WeaveAPI.globalHashMap);
//				_MobileDemo.setXMLState(WeaveAPI.globalHashMap, _MobileDemo.fullXML);
				Weave.loadWeaveFileContent((new _MobileDemo.fullWeave()) as ByteArray);
				Weave.root.requestObject('console', MobileConsole, false);
			}
			
			public function set scale(value:Number):void { main.scale.value = value; }
		]]>
	</fx:Script>
</s:Application>
