<?xml version="1.0" encoding="utf-8"?>
<!--
/*
    Weave (Web-based Analysis and Visualization Environment)
    Copyright (C) 2008-2011 University of Massachusetts Lowell

    This file is a part of Weave.

    Weave is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License, Version 3,
    as published by the Free Software Foundation.

    Weave is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with Weave.  If not, see <http://www.gnu.org/licenses/>.
*/
-->
<admin:WizardViewStack
			xmlns:mx="http://www.adobe.com/2006/mxml"
			xmlns:ui="weave.ui.*"
			xmlns:admin="weave.ui.admin.*"
			xmlns="weave.ui.admin.wizards.*"
			label="Import SQL tables to Weave"
			>
	<mx:VBox width="100%" height="100%">
		<!--<mx:Label fontWeight="bold" text="Add existing SQL data to a DataTable entry in SQLConfig.xml"/>-->
		<admin:SQLTableSelectorDialog id="tableSelector" showTableCombo="true" tableOverwriteCheckVisible="false"/>
		<mx:VBox visible="{Boolean(tableSelector.activeTable)}">
			<mx:HBox>
				<mx:Label textAlign="right" width="{tableSelector.indent}" text="{Strings.TABLE_DISPLAY_NAME}"/>
				<mx:TextInput id="tableNameInput" text="{tableSelector.activeTable}" toolTip="{Strings.SQL_TABLE_DISPLAY_NAME_TEXTINPUT_TIP}"/>
				<mx:CheckBox label="Overwrite" id="tableNameOverwriteCheck" selected="false"/>
			</mx:HBox>
			<ui:Indent indent="{tableSelector.indent}" label="{Strings.KEY_COLUMN_NAME}">
				<ui:CustomComboBox id="keyColumnComboBox" prompt="Select a column..." dataProvider="{tableSelector.columns}" toolTip="{Strings.SELECT_KEY_COLUMN_TIP}" creationComplete="initCombo(event)"/>
			</ui:Indent>
			<mx:VBox visible="{keyColumnComboBox.selectedItem}">
				<mx:Label text="What do these keys correspond to?"/>
				<ui:Indent>
					<admin:GeometryCollectionDialog id="geometrySelector" keyType="{tableSelector.activeTable}"/>
				</ui:Indent>
				<mx:CheckBox id="secondaryKeyColumnCheckBox" label="Format data for Dimension Slider" selected="false"/>
				<ui:Indent height="{secondaryKeyColumnCheckBox.selected ? NaN : 0}">
					<mx:HBox>
						<mx:Label text="Secondary key column"/>
						<ui:CustomComboBox id="sqlSecondaryKeyColumnCombo" dataProvider="{tableSelector.columns}" toolTip="Select a secondary key column for use with the Dimension Slider"/>
					</mx:HBox>
				</ui:Indent>
				<mx:CheckBox id="generateFilterColumns" label="Generate filtered column queries" selected="false"/>					
				<ui:Indent visible="{generateFilterColumns.selected}">
					<ui:TextBox label="Columns to use as filters" id="filterColumnsInput" text="{WeaveAPI.CSVParser.createCSVFromArrays([tableSelector.columns])}"/>
				</ui:Indent>
			</mx:VBox>
		</mx:VBox>
	</mx:VBox>
	<mx:Script>
		<![CDATA[
			import mx.binding.utils.BindingUtils;
			import mx.controls.ComboBox;
			import mx.events.CollectionEvent;
			import mx.events.FlexEvent;
			
			import weave.Strings;
			import weave.api.WeaveAPI;
			import weave.data.CSVParser;
			import weave.services.AdminInterface;
			
			override protected function childrenCreated():void
			{
				super.childrenCreated();
			}
			
			private function initCombo(event:Event):void
			{
				// This makes sure the text property of a combo will remain an empty string unless the user chooses something.
				// The collectionChange event is dispatched whenever the dataProvider changes
				var combo:ComboBox = event.target as ComboBox;
				var listener:Function = function(e:CollectionEvent):void { combo.selectedIndex = -1; };
				listener(null);
				combo.addEventListener(CollectionEvent.COLLECTION_CHANGE, listener);
				BindingUtils.bindSetter(toggleFinishButton, tableSelector, 'activeTable');
				BindingUtils.bindSetter(toggleFinishButton, keyColumnComboBox, 'selectedItem');
			}
			
			private function toggleFinishButton(_:*):void
			{
				finishEnabled = tableSelector.activeTable && keyColumnComboBox.selectedLabel;
			}
			
			override public function finish():void
			{
				var filterColumns:Array = null;
				if (generateFilterColumns.selected && filterColumnsInput.text)
					filterColumns = WeaveAPI.CSVParser.parseCSV(filterColumnsInput.text)[0];
				AdminInterface.instance.addConfigDataTableFromDatabase(
						tableSelector.activeSchema,
						tableSelector.activeTable,
						keyColumnComboBox.selectedLabel,
						secondaryKeyColumnCheckBox.selected ? sqlSecondaryKeyColumnCombo.selectedLabel : null,
						tableNameInput.text,
						tableNameOverwriteCheck.selected,
						geometrySelector.selectedGeometryCollection,
						geometrySelector.selectedKeyType,
						filterColumns
					);
			}
		]]>
	</mx:Script>
</admin:WizardViewStack>
