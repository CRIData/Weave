<?xml version="1.0" encoding="utf-8"?>
<mx:HDividedBox xmlns:mx="http://www.adobe.com/2006/mxml"
                xmlns:ui="weave.ui.*"
                xmlns:aci="weave.services.beans.*"
                xmlns="weave.ui.*"
                label="Hierarchy Editor"
                creationComplete="handleCreated()">
    <mx:VBox height="100%" width="40%">
        <mx:Label text="Tables"/>
        <ui:EntityTree id="tableTree" rootFilterType="{AttributeColumnInfo.ENTITY_TABLE}"
			change="deleteTableButton.enabled = tableTree.selectedItem &amp;&amp; (tableTree.selectedItem as EntityNode).getEntity().entity_type == AttributeColumnInfo.ENTITY_TABLE;"
            width="100%" height="100%" dragEnabled="true" dragMoveEnabled="false" dropEnabled="false"/>
        <mx:HBox width="100%">
            <mx:Button label="Import Table..." click="importTable()"/>
            <mx:Button id="deleteTableButton" label="Delete Table" click="deleteTable()"/>
        </mx:HBox>
    </mx:VBox>
    <mx:VBox height="100%" width="60%">
        <mx:Label text="Custom Hierarchy"/>
        <ui:EntityTree id="tagTree" rootFilterType="{AttributeColumnInfo.ENTITY_CATEGORY}"
            width="100%" height="100%" 
            dragEnabled="true" dragMoveEnabled="true" dropEnabled="true"/>
        <mx:HBox>
            <ui:TextInputWithPrompt id="tagNameInput" prompt="New category name" width="100%"/>
            <mx:Button label="Add Category" click="addTag()"/>
            <mx:Button label="Remove" click="remove()" enabled="{tagTree.selectedItem != null}"/>
        </mx:HBox>
    </mx:VBox>
<mx:Script>
<![CDATA[
	import mx.binding.utils.ChangeWatcher;
	import mx.events.ListEvent;
	import mx.events.PropertyChangeEvent;
	
	import weave.api.getCallbackCollection;
	import weave.core.UIUtils;
	import weave.services.AdminInterface;
	import weave.services.addAsyncResponder;
	import weave.services.beans.AttributeColumnInfo;
	import weave.utils.PopUpUtils;

    [Bindable] public var selectedItem:EntityNode;
	
    public function handleCreated():void
    {
        tableTree.addEventListener(ListEvent.CHANGE, selectionsChanged);
        tagTree.addEventListener(ListEvent.CHANGE, selectionsChanged);
		getCallbackCollection(AdminInterface.instance.meta_cache).addImmediateCallback(this, tagTree.invalidateList);
    }
    public function importTable():void
    {
        /* Pop up table import wizard */
    }
    public function deleteTable():void
    {
        var item:EntityNode = tableTree.selectedItem as EntityNode;
		if (item == null)
			return;
        /* Pop up confirmation, then delete table. */
        PopUpUtils.confirm(this, "Delete Table", "Delete selected table? All data columns in this table will also be deleted from all associated categories.", deleteTableFunction, null, "Delete", "Keep")
        function deleteTableFunction():void
        {
			AdminInterface.instance.meta_cache.delete_entity(item.id);
        }
    }
    public function addTag():void
    {
		var name:String = tagNameInput.text
        if (!name)
        {
            UIUtils.componentPulse(tagNameInput);
            return;
        }
        AdminInterface.instance.meta_cache.add_tag(name);
        tagNameInput.text = "";
    }
    public function selectionsChanged(event:ListEvent):void
    {
		var tree:CustomTree = event.currentTarget as CustomTree;
        var item:EntityNode = tree.selectedItem as EntityNode;
        if (item == null)
			return;
        this.selectedItem = item;
        if (tree == tagTree) 
            tableTree.selectedItem = null;
        else 
            tagTree.selectedItem = null;
    }
    public function remove():void
    {
        /* These behaviours kinda suck, just using these til someone comes up with something better. */
        var item:EntityNode = tagTree.selectedItem as EntityNode;
        if (item == null)
			return;
        var entity_type:int = item.getEntity().entity_type;
        var parent:EntityNode = tagTree.getParentItem(item);
        if (parent)
        {
			AdminInterface.instance.meta_cache.remove_child(item.id, parent.id);
        }
        else if (entity_type == AttributeColumnInfo.ENTITY_CATEGORY)
        {
            PopUpUtils.confirm(this, "Delete Tag", 'Delete tag "' + item.label + '"?', deleteTagFunction, null, "Delete", "Keep")
            function deleteTagFunction():void
            {
				AdminInterface.instance.meta_cache.delete_entity(item.id);
            }
        }
        else
        {
			// this occurs when Root is selected
			weaveTrace("Entity is not a category");
        }
    }
]]>
</mx:Script>
</mx:HDividedBox>
