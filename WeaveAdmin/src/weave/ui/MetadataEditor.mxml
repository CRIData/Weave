<?xml version="1.0" encoding="utf-8"?>

<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml"
    xmlns:ui="weave.ui.*"
    xmlns="weave.ui.*"
    width="100%" height="100%" creationComplete="handleCreationComplete()" enabled="{targetItem != null}">
    <mx:TabNavigator width="100%" height="100%">
        <ui:MetadataGrid id="publicMetaGrid" label="Public" 
            paddingBottom="5" paddingLeft="5" paddingRight="5" paddingTop="5" enabled="{targetItem != null}"/>    
        <ui:MetadataGrid id="privateMetaGrid" label="Private" 
            paddingBottom="5" paddingLeft="5" paddingRight="5" paddingTop="5" enabled="{targetItem != null}"/>
    </mx:TabNavigator>
    <mx:HBox>
        <mx:Button label="Discard Changes" enabled="{isChanged}" click="setEditors(null)"/>
        <mx:Button label="Save Changes" enabled="{isChanged}" click="saveChanges()"/>
        <mx:Button label="Debug Meta" click="printpubMeta()"/>
    </mx:HBox>
<mx:Script>
<![CDATA[
    import weave.services.AdminInterface;
    import weave.services.beans.AttributeColumnInfo;
    import weave.core.UIUtils;
    import mx.binding.utils.ChangeWatcher;
    import weave.services.WeaveAdminService;
    import weave.ui.EntityTreeNode;
    import mx.controls.Alert;
    [Bindable] public var targetItem:EntityTreeNode = null;
    [Bindable] public var isChanged:Boolean = false;

    private var pubWatcher:ChangeWatcher;
    private var privWatcher:ChangeWatcher;
    public function handleCreationComplete():void
    {
        ChangeWatcher.watch(this, "targetItem", setEditors);
        pubWatcher = ChangeWatcher.watch(publicMetaGrid, "metadata", metaChanged);
        privWatcher = ChangeWatcher.watch(privateMetaGrid, "metadata", metaChanged);
    }
    private function setEditors(o:Object = null):void
    {
        if (targetItem == null)
        {
            return;
        }
        publicMetaGrid.metadata = targetItem.object.publicMetadata;
        privateMetaGrid.metadata = targetItem.object.privateMetadata;
    }
    private function metaChanged(o:Object = null):void
    {
        var pubDiff:Object = EntityTreeNode.diffObjects(publicMetaGrid.metadata, targetItem.object.publicMetadata);
        var privDiff:Object = EntityTreeNode.diffObjects(privateMetaGrid.metadata, targetItem.object.privateMetadata);
        var prop:String;
        for (prop in pubDiff)
        {
            isChanged = true;
            return;
        }
        for (prop in privDiff)
        {
            isChanged = true;
            return;
        }
        isChanged = false;
    }
    private function saveChanges():void
    {
        var pubDiff:Object = EntityTreeNode.diffObjects(targetItem.object.publicMetadata, publicMetaGrid.metadata);
        var privDiff:Object = EntityTreeNode.diffObjects(targetItem.object.privateMetadata, privateMetaGrid.metadata);
        function validateCommit(o:Object = null):void
        {
            metaChanged();
            if (isChanged)
			{
                /* Spit out error */
			}
            else
                setEditors();
        }
        targetItem.commit(pubDiff, privDiff, validateCommit);
    }
    private static function printobj(o:Object):void
    {
        for (var prop:String in o)
            yell(prop + ":" + o[prop]);
    }
    public static function yell(str:String):void
    {
        WeaveAdminService.messageDisplay(null, str, false);
    }
    private function printpubMeta():void
    {
        printobj(publicMetaGrid.metadata);
    }

]]>
</mx:Script>
</mx:VBox>
