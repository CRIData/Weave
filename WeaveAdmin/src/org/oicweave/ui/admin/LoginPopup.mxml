<?xml version="1.0" encoding="utf-8"?>
<!--
/*
    Weave (Web-based Analysis and Visualization Environment)
    Copyright (C) 2008-2011 University of Massachusetts Lowell

    This file is a part of Weave.

    Weave is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License, Version 3,
    as published by the Free Software Foundation.

    Weave is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with Weave.  If not, see <http://www.gnu.org/licenses/>.
*/
-->
<!--
Author: skolman
-->

<mx:Panel xmlns:mx="http://www.adobe.com/2006/mxml" layout="vertical" title="Enter login criteria" 
		  paddingLeft="10" paddingTop="10" paddingRight="10" paddingBottom="10"
		  xmlns:ui="org.oicweave.ui.*"
		  xmlns="org.oicweave.ui.admin.*"
		  creationComplete="handleCreationComplete()">
	
	<mx:Script>
		<![CDATA[
			import mx.binding.utils.BindingUtils;
			import mx.managers.PopUpManager;
			
			import org.oicweave.services.AdminInterface;

			/**
			 * This function gets called only when this Panel
			 * has been added as a popup for the first time.
			 */
			private function handleCreationComplete():void
			{
				passwordInput.setFocus();
				//Fix to set cursor in Text Input. Though the focus is set to the password inout box the cursor is not set it till 
				//you click anywhere in the flash application. This is because when the browser loads the page the flash object is not selected.
				//We force the selection by passing the flash dom object to javascript and explicitly set the focus.
				//Does not work in Chrome
				ExternalInterface.call('function browserFocus(){var f = document.getElementById(\'AdminConsole\'); if(f){ f.tabIndex=0; f.focus();}}');
	
				//Sets up bindings such that when AdminInterface.instance.userHasAuthenticated changes, 
				//handleUserHasAuthenticatedChange() is invoked, passing as the argument
				//the new value of AdminInterface.instance.userHasAuthenticated.
				BindingUtils.bindSetter(handleUserHasAuthenticatedChange, AdminInterface.instance, "userHasAuthenticated");
				handleUserHasAuthenticatedChange(AdminInterface.instance.userHasAuthenticated);
			}
			
			private var _parent:DisplayObject = null;
			
			public function show(parent:DisplayObject):void
			{
				_parent = parent;
				if (parent)
					handleUserHasAuthenticatedChange(false);
			}
			
			private var _auth:Boolean = true;
			private function handleUserHasAuthenticatedChange(authenticated:Boolean):void
			{
				if (_auth == authenticated)
					return;
				
				_auth = authenticated;
				
				if (passwordInput)
					passwordInput.enabled = !authenticated;
				if (authenticated)
				{
					PopUpManager.removePopUp(this);
				}
				else
				{
					PopUpManager.addPopUp(this, _parent, true);
					PopUpManager.centerPopUp(this);
				}
			}
			
			private function login():void
			{
				if (loginTimer == null)
				{
					loginTimer = new Timer(1000, 1);
					loginTimer.addEventListener(TimerEvent.TIMER, handleLoginTimer);
				}
				
				// disable password, then re-enable after a delay if user didn't authenticate successfully.
				passwordInput.enabled = false;
				loginTimer.start();
				
				// authenticate with server
				AdminInterface.instance.authenticate(connectionCombo.text, passwordInput.text);
			}
			
			private var loginTimer:Timer = null;
			
			private function handleLoginTimer(event:Event):void
			{
				// re-enable password input if user has not authenticated successfully
				if (!AdminInterface.instance.userHasAuthenticated)
					passwordInput.enabled = true;
			}
		]]>
	</mx:Script>
	
	<mx:HBox>
			<mx:Label text="Connection Name:" width="110" textAlign="right"/>
			<ui:CustomComboBox id="connectionCombo" minWidth="150" text="{AdminInterface.instance.activeConnectionName}" change="AdminInterface.instance.activeConnectionName = connectionCombo.text;" dataProvider="{AdminInterface.instance.connectionNames}"/>
		</mx:HBox>
		<mx:HBox>
			<mx:Label text="SQL Password:" width="110" textAlign="right"/>
			<mx:TextInput id="passwordInput" displayAsPassword="true" width="100" enter="login()"/>
		</mx:HBox>
		<ui:Center>
			<mx:Button label="Log In" click="login()"/>
		</ui:Center>
	
</mx:Panel>
