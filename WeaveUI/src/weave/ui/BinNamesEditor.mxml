<?xml version="1.0" encoding="utf-8"?>
<!--
/*
Weave (Web-based Analysis and Visualization Environment)
Copyright (C) 2008-2011 University of Massachusetts Lowell

This file is a part of Weave.

Weave is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License, Version 3,
as published by the Free Software Foundation.

Weave is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with Weave.  If not, see <http://www.gnu.org/licenses/>.
*/
-->

<!--
BinNamesEditor

@skolman
-->
<ui:ControlPanel xmlns:ui ="weave.ui.*"
		 xmlns:mx="http://www.adobe.com/2006/mxml" 
		 xmlns="weave.ui.*"
		 >
	
	<mx:DataGrid id="editor" dataProvider="{gridSource}"/>
	
	
	<mx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.controls.dataGridClasses.DataGridColumn;
			
			import weave.api.registerLinkableChild;
			import weave.data.AttributeColumns.BinnedColumn;
			import weave.data.BinClassifiers.BinClassifierCollection;
			
			override protected function childrenCreated():void
			{
				var cols:Array = []
				
				var col1:DataGridColumn = new DataGridColumn("Bin Number");
				col1.dataField = "binNumber";
				cols.push(col1);
				
				var col2:DataGridColumn = new DataGridColumn("Name");
				col2.dataField = "binName";
				cols.push(col2);
				
			}
			
			private var gridSource:ArrayCollection = new ArrayCollection();
			
			public const binnedColumn:BinnedColumn = registerLinkableChild(this,new BinnedColumn(),handleBinnedColumnChange);
			
			private function handleBinnedColumnChange():void
			{
				var bins:BinClassifierCollection =  binnedColumn.derivedBins;
				
				var names:Array = bins.getNames();
				
				
				for (var i:int = 0; i <names.length; i++)
				{
					var rowObj:Object = {binNumber: i+1, binName:names[i]};
					gridSource.addItem(rowObj);
				}
			}
		]]>
	</mx:Script>
</ui:ControlPanel>