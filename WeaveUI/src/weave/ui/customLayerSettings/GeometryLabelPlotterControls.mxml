<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml" width="400" height="300" label="Geometry Labels" 
		 implements="weave.api.ui.ILinkableObjectEditor" xmlns:ui="weave.ui.*">
	<mx:VBox width="100%">
		<ui:DynamicColumnComponent id="labelComponent" label="Label"/> 
		<ui:DynamicColumnComponent id="geometryComponent" label="Geometry"/> 
	</mx:VBox>
	<mx:HBox width="100%">
		<mx:Label text="Label Text Size: " fontWeight="bold"/>
		<mx:HSlider id="labelSizeSlider"
					width="100%"
					alpha="1.0"
					snapInterval="1"
					tickInterval="2" labels="{['6','8','10','12','14','16','18','20']}"
					minimum="6" maximum="20" 
					liveDragging="true" mouseDown="event.stopPropagation()"
					creationComplete="linkBindableProperty(_plotter.size.defaultValue,event.target,'value')"/>
	</mx:HBox>
	<mx:HBox width="100%">
		<mx:Label text="Label Text Color:" fontWeight="bold"/>
		<mx:ColorPicker id="colorPicker" width="22" height="22"
						creationComplete="linkBindableProperty(_plotter.color.defaultValue, event.target, 'selectedColor')"/>
	</mx:HBox>
	
	<mx:Script>
		<![CDATA[
			import weave.api.core.ILinkableObject;
			import weave.api.getCallbackCollection;
			import weave.api.linkBindableProperty;
			import weave.api.ui.IPlotLayer;
			import weave.api.ui.IPlotter;
			import weave.api.unlinkBindableProperty;
			import weave.ui.PlotLayerEditor;
			import weave.utils.ColumnUtils;
			import weave.utils.EditorManager;
			import weave.visualization.layers.PlotLayer;
			import weave.visualization.layers.SelectablePlotLayer;
			import weave.visualization.plotters.DynamicPlotter;
			import weave.visualization.plotters.GeometryLabelPlotter;
			
			private var _plotter:GeometryLabelPlotter = null;
			
			public function setTarget(object:ILinkableObject):void
			{
				_plotter = object as GeometryLabelPlotter;
			}
			
			public function applyChanges():void
			{
				
			}			
			
			override protected function childrenCreated():void
			{
				super.childrenCreated();
				linkGeometryProperties();
			}
			
			override public function set data(value:Object):void
			{
				
				if (value == data)
					return;
				if (data is SelectablePlotLayer)
				{
					unlinkBindableProperty((data as SelectablePlotLayer).layerIsVisible, this, "layerIsVisible");
					unlinkBindableProperty((data as SelectablePlotLayer).layerIsSelectable, this, "layerIsSelectable");
				}
				// unlink the edit controls
				unlinkGeometryProperties();
				
				// save pointer to new layer
				super.data = value;
				
				if (data is SelectablePlotLayer)
				{
					linkBindableProperty((data as SelectablePlotLayer).layerIsVisible, this, "layerIsVisible");
					linkBindableProperty((data as SelectablePlotLayer).layerIsSelectable, this, "layerIsSelectable");
				}
				
				// link the edit controls	
				callLater(linkGeometryProperties, [data]);
				
			}
			
			private function linkGeometryProperties():void
			{
				labelComponent.dynamicObject = _plotter.text;
				geometryComponent.dynamicObject = _plotter.geometryColumn.internalDynamicColumn;
			}
			
			
			private function unlinkGeometryProperties():void
			{
				if (!data)
					return;
				
				labelComponent.dynamicObject = null;
				geometryComponent.dynamicObject = null;
			}
			
		]]>
	</mx:Script>
		
</mx:VBox>
