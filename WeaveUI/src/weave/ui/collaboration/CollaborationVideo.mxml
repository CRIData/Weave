<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:ui="weave.ui.*"
		   creationPolicy="all" creationComplete="creationCompleteHandler(event)"
		   horizontalScrollPolicy="off" verticalScrollPolicy="off">
	<mx:VBox width="100%" height="100%" verticalGap="3" 
			 horizontalScrollPolicy="off" verticalScrollPolicy="off">
		<mx:Canvas id="borderCanvas" borderColor="0x54585E" borderThickness="{_borderThickness}" borderStyle="solid" >
			<mx:UIComponent id="holder" width="100%" height="100%" />
		</mx:Canvas>
		<ui:Center>
			<mx:Label id="nameLabel" />
		</ui:Center>
	</mx:VBox>
	
	<mx:Resize id="resizeEffect" duration="600" />
	<mx:Move id="moveEffect" duration="600" />
	
	<mx:Script>
		<![CDATA[
			import mx.events.FlexEvent;
			
			
			public var stream:NetStream;
			public var video:Video;
			private var _borderThickness:Number = 4;
			private var nickname:String;
			
			private function creationCompleteHandler(event:FlexEvent):void
			{
				holder.addChild(video);
				borderCanvas.width = video.width + 2*_borderThickness;
				borderCanvas.height = video.height + 2*_borderThickness;
				nameLabel.text = nickname;
			}
			public function play(str:String):void
			{
				stream.play(str);
				video.attachNetStream(stream);
			}
			public function close():void
			{
				video.attachNetStream(null);
				video.clear();
				stream.close();
				holder.removeChild(video);
			}
			public function setPos(x:Number, y:Number, showEffect:Boolean = false):void
			{
				if( showEffect )
				{
					moveEffect.stop();
					moveEffect.xFrom = this.x;
					moveEffect.xTo	 = x;
					moveEffect.yFrom = this.y;
					moveEffect.yTo	 = y;
					moveEffect.play([this]);
				}
				else
				{
					this.x = x;
					this.y = y;
				}
			}
			public function setSize(width:Number, height:Number, showEffect:Boolean = false):void
			{
				if( showEffect )
				{
					resizeEffect.stop();
					resizeEffect.widthFrom 	= this.width;
					resizeEffect.widthTo	= width + 2*_borderThickness;
					resizeEffect.heightFrom = this.height;
					resizeEffect.heightTo	= height + 2*_borderThickness + nameLabel.height + 3;
					resizeEffect.play([this]);
				}
				else
				{
					this.width  = width  + 2*_borderThickness;
					this.height = height + 2*_borderThickness + nameLabel.height + 3;
				}
			}
			public function setName(name:String):void
			{
				nickname = name;
			}
			
		]]>
	</mx:Script>
</mx:Canvas>
