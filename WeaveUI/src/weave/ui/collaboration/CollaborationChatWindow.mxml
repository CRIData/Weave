<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" 
		 verticalScrollPolicy="off" horizontalScrollPolicy="off"
		 borderColor="#54585E" borderThickness="3" borderStyle="solid"
		 backgroundAlpha="1" backgroundColor="#CCCCCC"
		 showEffect="{moveIn}" hideEffect="{moveOut}">

	<mx:Move id="moveIn" duration="1000"
			 xFrom="{xFrom}" xTo="{xTo}"
			 yFrom="{yFrom}" yTo="{yTo}"/>
	<mx:Move id="moveOut" duration="1000"
			 xFrom="{xTo}" xTo="{xFrom}"
			 yFrom="{yTo}" yTo="{yFrom}"/>
	
	<mx:VBox width="100%" height="100%"
			 paddingBottom="{padding}" paddingLeft="{padding}"
			 paddingRight="{padding}" paddingTop="{padding}">
		<mx:VDividedBox width="100%" height="100%">
			<mx:Canvas id="camChatContainer" width="100%" backgroundColor="#000000" />
			<mx:VBox width="100%" height="100%">
				<mx:HDividedBox width="100%" height="100%">
					<mx:TextArea id="log" width="100%" height="100%" editable="false" />
					<mx:List id="userList" height="100%" labelField="name" minWidth="140">
						<mx:itemRenderer>
							<mx:Component>
								<mx:HBox width="100%" height="100%">
									<mx:Script>
										<![CDATA[
											
											override public function set data(value:Object):void
											{
												color.setStyle("backgroundColor", outerDocument._colorList[value]);
												labelName.text = value as String;
												if( (value as String) == outerDocument.username )
													labelName.setStyle("fontWeight", "bold");
												else
													labelName.setStyle("fontWeight", "normal");
											}
											
										]]>
									</mx:Script>
									<mx:Canvas id="color" width="{color.height}" height="80%" />
									<mx:Label id="labelName" fontSize="12" width="100%" />
								</mx:HBox>
							</mx:Component>
						</mx:itemRenderer>
					</mx:List>
				</mx:HDividedBox>
				<mx:HBox width="100%">
					<mx:TextInput id="input" width="100%" enter="dispatchMessageEvent()" />
					<mx:Button id="button_send" label="Send" click="dispatchMessageEvent()" />
					<mx:HBox width="140">
						<mx:Button id="button_mic" label="Mic" width="50%" />
						<mx:Button id="button_cam" label="Cam" width="50%" />
					</mx:HBox>
				</mx:HBox>
			</mx:VBox>
		</mx:VDividedBox>
	</mx:VBox>
	
	<mx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.collections.ICollectionView;
			import mx.collections.Sort;
			import mx.utils.StringUtil;
			
			import weave.services.collaboration.CollaborationEvent;
			
			[Bindable] public var xFrom:Number = 0;
			[Bindable] public var xTo:Number = 0;
			[Bindable] public var yFrom:Number = 0;
			[Bindable] public var yTo:Number = 0;
			[Bindable] public var unreadMessages:Number = 0;
			[Bindable] internal var _colorList:Dictionary  = new Dictionary();
			[Bindable] private var _users:ArrayCollection = new ArrayCollection();
			
			[Bindable] private var padding:Number = 10;
			internal var username:String = null;
			
			public function logText(txt:String):void
			{
				var from:String = txt.substr(0, txt.indexOf(":"));
				if( from && from == username )
					log.htmlText += "<font color='#FF0000'>"+txt+"<br>";
				else
					log.htmlText += "<font color='#0000FF'>"+txt +"<br>";
				
				callLater(
					function():void {
						log.verticalScrollPosition = log.maxVerticalScrollPosition;
					}
				);
				if( !visible ) unreadMessages++;
			}
			private function dispatchMessageEvent():void
			{
				dispatchEvent(new CollaborationEvent(CollaborationEvent.SEND_MESSAGE, input.text));
				input.text = "";
			}
			public function setNickname(usrname:String):void
			{
				username = usrname;
			}
			public function set userNameList(array:ArrayCollection):void
			{
				userList.dataProvider = array;
				/*
				if( array.length > _users.length ) // Someone was added to the list
				{
					for( var i:int = 0; i < array.length; i++ )
					{
						if( _colorList[array[i]] == null )
						{
							_colorList[array[i]] = 0;
							break;
						}
					}
				}
				else // Someone was removed from the list
				{
					var found:Boolean = false;
					for( var name:String in _colorList )
					{
						for( var i:int = 0; i < array.length; i++ )
						{
							if( name == array[i] )
							{
								found = true;
								break;
							}
						}
						if( found ) {
							found = false;
							continue;
						}
						delete _colorList[name];
						break;
					}
				}
				synchronizeList(); 
				*/
			}
			
			public function setUserColor(name:String, color:uint):void
			{
				_colorList[name] = color;
				(userList.dataProvider as ICollectionView).refresh();

//				synchronizeList();
			}
		]]>
	</mx:Script>
</mx:Canvas>
