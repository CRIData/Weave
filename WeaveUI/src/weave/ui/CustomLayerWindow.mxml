<?xml version="1.0" encoding="utf-8"?>
<!--
/*
    Weave (Web-based Analysis and Visualization Environment)
    Copyright (C) 2008-2011 University of Massachusetts Lowell

    This file is a part of Weave.

    Weave is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License, Version 3,
    as published by the Free Software Foundation.

    Weave is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with Weave.  If not, see <http://www.gnu.org/licenses/>.
*/
-->
<!---
	This component enlists custom layers available 
	@author kmanohar
-->
<DraggablePanel xmlns="weave.ui.*" 
				xmlns:mx="http://www.adobe.com/2006/mxml" title="Add a new layer"
				creationPolicy="all"
				backgroundColor="0xcccccc"
				layout="vertical">
	<mx:VBox borderStyle="solid"
			 paddingLeft="5" paddingTop="5" paddingBottom="5" paddingRight="5"
			 backgroundAlpha="0.8" backgroundColor="white" cornerRadius="5"
			 width="100%" height="100%">	
	<!--<mx:HBox width="100%">
		<mx:TextInput id="searchInput" 
					  width="90%"					  
					  toolTip="Search for plotters available"/>
	</mx:HBox>-->
	<mx:List id="layerSelector">
		<mx:Object label="Horizontal custom bars" 
				   plotter="weave.visualization.plotters.CompoundBarChartPlotter" 
				   editor="weave.ui.customLayerSettings.CompoundBarChartSettings" 
				   plotlayer="weave.visualization.layers.SelectablePlotLayer"/>
		<mx:Object label="Vertical custom bars" 
				   plotter="weave.visualization.plotters.CompoundBarChartPlotter" 
				   editor="weave.ui.customLayerSettings.CompoundBarChartSettings" 
				   plotlayer="weave.visualization.layers.SelectablePlotLayer"/>
		
	<!--	<mx:Object label="X axis labels" 
				   plotter=""
				   plotlayer="weave.visualization.layers.PlotLayer"/>
		
		<mx:Object label="Y axis labels" 
				   plotter=""
				   plotlayer="weave.visualization.layers.PlotLayer"/>
-->
		<mx:Object label="Vertical grid lines" 
				   plotter="weave.visualization.plotters.GridLinePlotter" 
				   editor="weave.ui.customLayerSettings.GridLineLayerControls"
				   plotlayer="weave.visualization.layers.PlotLayer"/>
		
		<mx:Object label="Horizontal grid lines" 
				   plotter="weave.visualization.plotters.GridLinePlotter" 
				   editor="weave.ui.customLayerSettings.GridLineLayerControls"
				   plotlayer="weave.visualization.layers.PlotLayer"/>
	</mx:List>

	<mx:Button label="Add new layer" right="0"
			   click="openControls()"/>
	</mx:VBox>
	<mx:Script>
		<![CDATA[
			import mx.managers.PopUpManager;
			
			import weave.api.ui.IPlotLayer;
			import weave.api.ui.IPlotter;
			import weave.visualization.plotters.CompoundBarChartPlotter;
			import weave.visualization.plotters.DynamicPlotter;
			import weave.visualization.plotters.GridLinePlotter;
			import weave.visualization.tools.SimpleVisTool;

			[Bindable]
			private var _labelWidth:int = 100;
			
			[Bindable]
			private var _tool:SimpleVisTool = null;
			
			override protected function constructor():void
			{
				super.constructor();
				
				this.panelHeight.value = "300";
				this.panelWidth.value = "200";
			}
			
			public function set targetTool(value:SimpleVisTool):void
			{
				if (_tool != value && _tool != null)
					throw new Error("CustomLayerWindow.targetTool should not be set more than once");
				
				_tool = value;
			}
			
			private function openControls():void
			{
				var _class:String = (layerSelector.selectedItem.plotter as String);
				var _editor:String = (layerSelector.selectedItem.editor as String);
				var _layer:String = (layerSelector.selectedItem.plotlayer as String);
				if(!_class) 
					return;
				var PLOTTER:Class = getDefinitionByName(_class) as Class;
				if(!PLOTTER)
					return;
				
				
				var controls:* = PopUpManager.createPopUp(this, CustomLayerControls);
				PopUpManager.centerPopUp(controls);

				var LAYER:Class = getDefinitionByName(_layer) as Class;
				
				var newlayer:IPlotLayer = _tool.visualization.layers.requestObject(_tool.visualization.layers.generateUniqueName("layer"), LAYER, false) as IPlotLayer;
				var plotter:IPlotter = ((newlayer as LAYER).getDynamicPlotter() as DynamicPlotter).requestLocalObject(PLOTTER, true) as IPlotter;
				
				var controls2:CustomLayerControls = controls as CustomLayerControls ;
				controls2.targets = [plotter];
				controls2.setTargetTool(_tool);
				
				// add editor component to layercontrols
				if(_editor)
				{
					var EDITOR:Class = getDefinitionByName(_editor) as Class;
					if(!EDITOR)
						return;
					var layercontrols:* = new EDITOR();
					
					controls2.controlsContainer.addChildAt(layercontrols, 0);
					
					layercontrols.plotter = plotter as PLOTTER;
					layercontrols.tool = _tool;
				}
				
				// special case code below
				if(layerSelector.selectedIndex == 5)
				{
					(plotter as GridLinePlotter).horizontal.value = true;
				}
				if(layerSelector.selectedIndex == 0)
					(plotter as CompoundBarChartPlotter).horizontalMode.value = true;
			}
			
			
		]]>
	</mx:Script>
</DraggablePanel>
